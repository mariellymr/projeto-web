version: '3.8'

services:
  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - ${NGINX_PORT}:80
    networks:
      - net_web
    depends_on:
      - frontend
      - backend

  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - ${FRONTEND_PORT}:5173
    volumes:
      - ./frontend:/usr/source/app
      - /usr/source/app/node_modules
    networks:
      - net_web
    depends_on:
      - backend

  backend:
    container_name: backend
    build: ./backend
    ports:
      - ${BACKEND_PORT}:3000
    volumes:
      - ./backend:/usr/source/app
      - /usr/source/app/node_modules
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=postgres
    networks:
      - net_web
    depends_on:
      - db

  db:
    image: postgres:alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - net_web

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - net_web
    depends_on:
      - db

volumes:
  postgres_data:
  pgadmin_data:

networks:
  net_web:
    driver: bridge